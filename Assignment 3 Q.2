#include <iostream>
#include <string>
#include <vector>
using namespace std;
class Product {
private:
    int productId;
    string productName;
    double price;

public:
    Product(int id, const string& name, double price)
        : productId(id), productName(name), price(price) {}

    void displayDetails() const {
        cout << "Product ID: " << productId << ", Name: " << productName << ", Price: $" << price << endl;
    }

    double getPrice() const {
        return price;
    }

};

class ShoppingCart {
public:
    void addProduct(const Product& product) {
        products.push_back(product);
    }

    void displayProducts() const {
        cout << "Products in the Cart:" << endl;
        for (const auto& product : products) {
            product.displayDetails();
        }
    }

    double calculateTotalCost() const {
        double total = 0.0;
        for (const auto& product : products) {
            total += product.getPrice();
        }
        return total;
    }

private:
    vector<Product> products;
};

class User {
public:
    User(int id, const string& name) : userId(id), userName(name) {}

    void displayDetails() const {
        cout << "User ID: " << userId << ", Name: " << userName << endl;
    }

    void associateShoppingCart(ShoppingCart* cart) {
        shoppingCart = cart;
    }

private:
    int userId;
    string userName;
    ShoppingCart* shoppingCart = nullptr;
};

int main() {
    Product laptop(1, "Laptop", 999.99);
    Product phone(2, "Smartphone", 499.99);

    ShoppingCart cart;

    cart.addProduct(laptop);
    cart.addProduct(phone);

    cart.displayProducts();

    cout << "Total Cost: $" << cart.calculateTotalCost() << endl;

    User user1(101, "John Doe");

    user1.associateShoppingCart(&cart);

    user1.displayDetails();

    return 0;
}

